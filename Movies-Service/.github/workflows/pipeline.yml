name: Kinoroom Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
    ACR_RESOURCE_GROUP: general-kinoroom-prod-westeu-001
    AZURE_CONTAINER_REGISTRY: kinoroomregistry
    CLUSTER_NAME: kinoroom-cluster
    CLUSTER_RESOURCE_GROUP: kinoroom-cluster_group
    CONTAINER_NAME: movies_api
    DEPLOYMENT_MANIFEST_PATH: |
        ./manifests/deployment.yml
        ./manifests/ingress.yml
        ./manifests/service.yml
        ./manifests/autoscaler.yml
jobs:
  # Build dotNET:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - uses: actions/checkout@v2
  
  #Build local Docker Image for Snyk:
  build-docker-local:
    needs: [build]
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/movies-api:latest

  # Perform load test on the Kubernetes cluster with K6:
  k6_load_test:
    name: K6 Load Test
    needs: [build-docker-local]
    runs-on: self-hosted
    steps:
      - name: Setup environment
        run: ./scripts/run_load_test

  # Build image & push to Azure registry:
  buildImageAzureRegistry:
      needs: [k6_load_test]
      permissions:
          contents: read
          id-token: write
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - uses: azure/login@v1.4.3
            name: Azure login
            with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
          - name: Build and push image to ACR
            run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile ./

  # Deploy to Azure cluster:
  deploy:
      permissions:
          actions: read
          contents: read
          id-token: write
      runs-on: ubuntu-latest
      needs: [buildImageAzureRegistry]
      steps:
          - uses: actions/checkout@v3
          - uses: azure/login@v1.4.3
            name: Azure login
            with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
          - uses: azure/aks-set-context@v3
            name: Get K8s context
            with:
              cluster-name: ${{ env.CLUSTER_NAME }}
              resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
          - uses: Azure/k8s-deploy@v4
            name: Deploys application
            with:
              action: deploy
              images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
              manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
              namespace: default